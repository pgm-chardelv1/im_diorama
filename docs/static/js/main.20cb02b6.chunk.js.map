{"version":3,"sources":["App/lib/MatCap/index.js","App/components/House/assets/house.glb","App/components/House/Cats.jsx","App/components/House/Bats.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["MatCap","id","GREEN","BLACK","size","XS","SM","MD","LG","XL","Cat","nodes","useGLTF","catGlb","useMatcapTexture","matcap","clickableMatCap","useState","toggle","setToggle","scale","geometry","position","side","DoubleSide","rotation","onClick","Bat","batGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","Lighting","color","intensity","castShadow","angle","MathUtils","degToRad","penumbra","LightingGui","useControls","directionalLightColor","label","value","directionalLightIntensity","max","min","directionalLightPosition","x","z","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPenumbra","spotLightPosition","spotLightTarget","useThree","target","Object3D","add","directionalLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","translateX","translateZ","LightingStudio","LightingStudioGui","ambientLightIntensity","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","components","lightings","Content","name","showStats","showAxesHelper","showGridHelper","useComponent","options","useLighting","useLightingGui","showLighting","OrbitControls","enablePan","enableRotate","enableZoom","Stats","fallback","App","linear","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20cb02b6.chunk.js","sourcesContent":["// https://github.com/emmelleppi/matcaps\nconst MatCap = {\n  id: {\n    GREEN: \"54C104_BBFA0F_97EF04_7AE104\",\n    BLACK: \"1B1B1B_515151_7E7E7E_6C6C6C\",\n  },\n  size: {\n    XS: 64,\n    SM: 128,\n    MD: 256,\n    LG: 512,\n    XL: 1024,\n  },\n};\n\nexport default MatCap;\n","export default __webpack_public_path__ + \"static/media/house.b9cadbfe.glb\";","import { useState } from 'react';\nimport { useGLTF, useMatcapTexture } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\n\nimport MatCap from \"../../lib/MatCap\";\nimport catGlb from './assets/house.glb';\n/**\n * Cat V1 3D Model source: https://free3d.com/3d-model/cat-v1--326682.html\n * Created by printable_models: https://free3d.com/user/printable_models\n * LICENSE: Personal Use License\n */\n\nconst Cat = () => {\n    const { nodes } = useGLTF(catGlb, true);\n    const [matcap] = useMatcapTexture(MatCap.id.BLACK, MatCap.size.XS);\n    const [clickableMatCap] = useMatcapTexture(MatCap.id.GREEN, MatCap.size.XL);\n    const [toggle, setToggle] = useState(true);\n    const scale = toggle ? .01 : 0.1;\n\n    return (\n        <group>\n            <mesh geometry={nodes.Cat.geometry} scale={0.01} position={[-4,0, 3]}>\n                <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n            </mesh>\n            <mesh geometry={nodes.Cat.geometry} scale={0.01} position={[-3, 0, 3]} rotation={[0, 45, 0]}>\n                <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n            </mesh>\n            <mesh onClick={() =>  setToggle(!toggle)} geometry={nodes.Cat.geometry} scale={scale} position={[-4, 0, 2]} rotation={[0, -45, 0]}>\n                <meshMatcapMaterial matcap={clickableMatCap} side={DoubleSide}/>\n            </mesh>\n        </group>\n    );\n};\n\nexport default Cat;\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useGLTF, useMatcapTexture } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\nimport { useFrame } from '@react-three/fiber';\n\nimport MatCap from \"../../lib/MatCap\";\nimport batGlb from './assets/house.glb';\nimport { AnimationMixer } from 'three';\n\nconst Bat = () => {\n    const { animations, scene } = useGLTF(batGlb, true);\n    const animationRef = useRef();\n    const mixer = useMemo(() => new AnimationMixer(), []);\n    const [matcap] = useMatcapTexture(MatCap.id.BLACK, MatCap.size.XS);\n    const [toggle, setToggle] = useState(true);\n    const scale = toggle ? 1 : 2;\n\n    useEffect(() => {\n        if (animationRef.current) {\n            mixer.clipAction(animations[0], animationRef.current).play();\n        }\n    }, [animations, mixer]);\n\n    useFrame((state, delta) => {\n        mixer.update(delta);\n    });\n    {/* <group>\n    <mesh geometry={nodes.Bat.geometry} scale={1} position={[-4,-1, 3]}>\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n    </mesh>\n    <mesh geometry={nodes.Bat.geometry} scale={1} position={[-3, 3, 7]} rotation={[0, 45, 0]}>\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n    </mesh>\n    <mesh onClick={() =>  setToggle(!toggle)} geometry={nodes.Bat.geometry} scale={scale} position={[-4,-1, 2]} rotation={[0, -45, 0]}>\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n    </mesh>\n</group> */}\n\n    return (\n        <primitive object={scene} ref={animationRef} />)\n    ;\n};\n\nexport default Bat;\n","import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\n\r\nconst LightingGui = () => {\r\n  const {\r\n    directionalLightColor,\r\n    directionalLightIntensity,\r\n    directionalLightPosition,\r\n  } = useControls(\"Lighting - Directional Light\", {\r\n    directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n    directionalLightIntensity: {\r\n      label: \"Intensity\",\r\n      max: 20,\r\n      min: 0,\r\n      value: 0.5,\r\n    },\r\n    directionalLightPosition: { label: \"Position XZ\", value: { x: 4, z: 1 } },\r\n  });\r\n  const { pointLightColor, pointLightIntensity, pointLightPosition } =\r\n    useControls(\"Lighting - Point Light\", {\r\n      pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n      pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n      pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    });\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPenumbra,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spotlight\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n    spotLightPenumbra: { label: \"Penumbra\", value: 0.5 },\r\n    spotLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor,\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightTarget.x);\r\n    target.translateZ(spotLightTarget.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[directionalLightPosition.x, 4, directionalLightPosition.z]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={spotLightPenumbra}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 100%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nconst LightingStudioGui = () => {\r\n  const { ambientLightIntensity } = useControls(\"Lighting - Ambient Light\", {\r\n    ambientLightIntensity: { label: \"Intensity\", max: 5, min: 0, value: 0.1 },\r\n  });\r\n  const { frontLightColor, frontLightIntensity } = useControls(\r\n    \"Lighting - Front Light\",\r\n    {\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      frontLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 0.4,\r\n      },\r\n    },\r\n  );\r\n  const { leftLightColor, leftLightIntensity } = useControls(\r\n    \"Lighting - Left Light\",\r\n    {\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n  const { rightLightColor, rightLightIntensity } = useControls(\r\n    \"Lighting - Right Light\",\r\n    {\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={ambientLightIntensity} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudioGui;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingThreePointGui = () => {\r\n  const { backLightColor, backLightIntensity } = useControls(\r\n    \"Lighting - Back Light\",\r\n    {\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { fillLightColor, fillLightIntensity } = useControls(\r\n    \"Lighting - Fill Light\",\r\n    {\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { keyLightColor, keyLightIntensity } = useControls(\r\n    \"Lighting - Key Light\",\r\n    {\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointGui;\r\n","/**\n * Import dependencies\n */\n\nimport { Suspense } from 'react';\nimport { OrbitControls, Stats } from '@react-three/drei';\nimport { useControls } from 'leva';\n\n/**\n * Import local components\n */\nimport Cat from './components/House/Cats';\nimport Bat from './components/House/Bats';\n\n// Lighting\nimport Lighting from './components/Lighting';\nimport LightingGui from './components/Lighting/indexGui';\nimport LightingStudio from './components/Lighting/Studio';\nimport LightingStudioGui from './components/Lighting/StudioGui';\nimport LightingThreePoint from './components/Lighting/ThreePoint';\nimport LightingThreePointGui from './components/Lighting/ThreePointGui';\n\nconst components = [\n    'House',\n];\n\nconst lightings = ['None', 'Default', 'Studio', 'ThreePoint'];\n\nconst Content = () => {\n    const { showStats } = useControls('General', {\n        showStats: {\n            label: 'Stats',\n            value: false,\n        },\n    });\n\n    const {\n        showAxesHelper,\n        showGridHelper,\n        useComponent,\n        useLighting,\n        useLightingGui,\n    } = useControls('Helpers', {\n        showAxesHelper: {\n            label: 'Axes Helper',\n            value: false,\n        },\n        showGridHelper: {\n            label: 'Grid Helper',\n            value: false,\n        },\n        useComponent: {\n            label: 'Component',\n            options: components,\n            value: 'House',\n        },\n        useLighting: {\n            label: 'Lighting',\n            options: lightings,\n            value: 'ThreePoint',\n        },\n        useLightingGui: {\n            label: 'Lighting GUI',\n            value: false,\n        },\n    });\n\n    function showComponent(name) {\n        return useComponent === name;\n    };\n\n    function showLighting(name) {\n        return useLighting === name;\n    };\n\n    return (\n        <>\n            <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\n            {showAxesHelper && <axesHelper />}\n            {showGridHelper && <gridHelper />}\n            {showStats && <Stats />}\n\n            {showLighting('Default') && !useLightingGui && <Lighting/>}\n            {showLighting('Default') && useLightingGui && <LightingGui />}\n            {showLighting(\"Studio\") && !useLightingGui && <LightingStudio />}\n            {showLighting(\"Studio\") && useLightingGui && <LightingStudioGui />}\n            {showLighting(\"ThreePoint\") && !useLightingGui && <LightingThreePoint />}\n            {showLighting(\"ThreePoint\") && useLightingGui && (\n                <LightingThreePointGui />\n            )}\n\n            <Suspense fallback={null}>\n                {showComponent('House') && <><Cat /><Bat /></>}\n            </Suspense>\n        </>\n    )\n}\n\nexport default Content\n","import { Canvas } from '@react-three/fiber';\nimport Content from './Content';\nconst App = () => {\n    return (\n        <Canvas>\n            <Content linear={false} shadows={true} />\n        </Canvas>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}