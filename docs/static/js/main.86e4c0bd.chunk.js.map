{"version":3,"sources":["App/components/House/assets/house.glb","App/components/House/index.jsx","App/lib/MatCap/index.js","App/components/House/Cats.jsx","App/components/House/MatcapTexture.jsx","App/components/House/PhysicalMaterial.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["House","children","nodes","useGLTF","houseGlb","geometry","color","side","DoubleSide","opacity","transparent","MatCap","id","GREEN","size","XS","SM","MD","LG","XL","BLACK","Cat","catGlb","useMatcapTexture","matcap","HouseMatcapTexture","HousePhysicalMaterial","useControls","dithering","label","value","max","min","emissive","emissiveIntensity","metalness","refractionRatio","roughness","wireframe","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenRoughness","sheenTint","specularIntensity","specularTint","thickness","transmission","Lighting","intensity","castShadow","position","angle","MathUtils","degToRad","penumbra","LightingGui","directionalLightColor","directionalLightIntensity","directionalLightPosition","x","z","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPenumbra","spotLightPosition","spotLightTarget","scene","useThree","target","Object3D","add","directionalLightRef","useRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","useFrame","translateX","translateZ","ref","LightingStudio","LightingStudioGui","ambientLightIntensity","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","components","lightings","Content","showStats","showAxesHelper","showGridHelper","useComponent","options","useLighting","useLightingGui","showComponent","name","showLighting","OrbitControls","enablePan","enableRotate","enableZoom","Stats","fallback","App","linear","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86e4c0bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/house.b9cadbfe.glb\";","import { useGLTF } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\n\nimport houseGlb from './assets/house.glb';\n\nconst House = ({children}) => {\n    const { nodes } = useGLTF(houseGlb, true);\n\n    return (\n        <>\n            <group>\n                <mesh geometry={nodes.House.geometry}>\n                    <meshBasicMaterial color={0xffffff} side={DoubleSide} opacity={0.5} transparent={true}/>\n                </mesh>\n            </group>\n            <group>\n                {children}\n            </group>\n        </>\n    );\n};\n\nexport default House;\n","// https://github.com/emmelleppi/matcaps\nconst MatCap = {\n  id: {\n    GREEN: \"54C104_BBFA0F_97EF04_7AE104\",\n  },\n  size: {\n    XS: 64,\n    SM: 128,\n    MD: 256,\n    LG: 512,\n    XL: 1024,\n  },\n  id: {\n    BLACK: '1B1B1B_515151_7E7E7E_6C6C6C',\n    size: {\n      XS: 64,\n      SM: 128,\n      MD: 256,\n      LG: 512,\n      XL: 1024,\n    }\n  }\n};\n\nexport default MatCap;\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\n\nimport MatCap from \"../../lib/MatCap\";\nimport catGlb from './assets/house.glb';\n\nconst Cat = () => {\n    const { nodes } = useGLTF(catGlb, true);\n    const [matcap] = useMatcapTexture(MatCap.id.BLACK, MatCap.size.XL);\n\n    return (\n        <group>\n            <mesh geometry={nodes.Cat.geometry}>\n                <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n            </mesh>\n        </group>\n    );\n};\n\nexport default Cat;\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\n\nimport MatCap from \"../../lib/MatCap\";\nimport houseGlb from \"./assets/house.glb\";\n\nconst HouseMatcapTexture = ({children}) => {\n  const { nodes } = useGLTF(houseGlb, true);\n  const [matcap] = useMatcapTexture(MatCap.id.GREEN, MatCap.size.XS);\n\n  return (\n      <>\n    <group>\n      <mesh geometry={nodes.House.geometry}>\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide}/>\n      </mesh>\n    </group>\n    <group>{children}</group>\n    </>\n  );\n};\n\nexport default HouseMatcapTexture;","import { DoubleSide, MathUtils } from \"three\";\nimport { Plane, useGLTF } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport houseGlb from \"./assets/house.glb\";\n\nconst HousePhysicalMaterial = ({children}) => {\n  const { nodes } = useGLTF(houseGlb, true);\n\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\n    dithering: { label: \"Dithering\", value: false },\n    opacity: { label: \"Opacity\", max: 1, min: 0, value: 1 },\n    transparent: { label: \"Transparent\", value: false },\n  });\n\n  const {\n    color,\n    emissive,\n    emissiveIntensity,\n    metalness,\n    refractionRatio,\n    roughness,\n    wireframe,\n  } = useControls(\"StandardMaterial\", {\n    color: { label: \"Color\", value: \"#ffffff\" },\n    emissive: { label: \"Emissive\", value: \"#000000\" },\n    emissiveIntensity: {\n      label: \"Emissive Intensity\",\n      max: 5,\n      min: 0,\n      value: 1,\n    },\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\n    refractionRatio: {\n      label: \"Refraction Ratio\",\n      max: 2,\n      min: 0,\n      value: 0.98,\n    },\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\n    wireframe: { label: \"Wireframe\", value: false },\n  });\n\n  const {\n    clearcoat,\n    clearcoatRoughness,\n    ior,\n    reflectivity,\n    sheen,\n    sheenRoughness,\n    sheenTint,\n    specularIntensity,\n    specularTint,\n    thickness,\n    transmission,\n  } = useControls(\"Physical Material\", {\n    clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\n    clearcoatRoughness: {\n      label: \"Clearcoat Roughness\",\n      max: 1,\n      min: 0,\n      value: 0,\n    },\n    ior: { label: \"Index of Refraction\", max: 2.333, min: 1, value: 1.5 },\n    reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\n    sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\n    sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\n    sheenTint: { label: \"Sheen Tint\", value: \"#ffffff\" },\n    specularIntensity: {\n      label: \"Specular Intensity\",\n      max: 1,\n      min: 0,\n      value: 1,\n    },\n    specularTint: { label: \"Specular Tint\", value: \"#ffffff\" },\n    thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\n    transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\n  });\n\n  return (\n    <group>\n      <mesh geometry={nodes.House.geometry}>\n        <meshPhysicalMaterial\n          color={color}\n          clearcoat={clearcoat}\n          clearcoatRoughness={clearcoatRoughness}\n          emissive={emissive}\n          emissiveIntensity={emissiveIntensity}\n          dithering={dithering}\n          ior={ior}\n          metalness={metalness}\n          opacity={opacity}\n          reflectivity={reflectivity}\n          refractionRatio={refractionRatio}\n          roughness={roughness}\n          transparent={transparent}\n          sheen={sheen}\n          sheenRoughness={sheenRoughness}\n          sheenTint={sheenTint}\n          specularIntensity={specularIntensity}\n          specularTint={specularTint}\n          thickness={thickness}\n          transmission={transmission}\n          wireframe={wireframe}\n          side={DoubleSide}\n        />\n      </mesh>\n      {children}\n      {/* <Plane\n        args={[2, 2]}\n        position={[0, 0, -1]}\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\n      /> */}\n    </group>\n  );\n};\n\nexport default HousePhysicalMaterial;\n","import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\n\r\nconst LightingGui = () => {\r\n  const {\r\n    directionalLightColor,\r\n    directionalLightIntensity,\r\n    directionalLightPosition,\r\n  } = useControls(\"Lighting - Directional Light\", {\r\n    directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n    directionalLightIntensity: {\r\n      label: \"Intensity\",\r\n      max: 20,\r\n      min: 0,\r\n      value: 0.5,\r\n    },\r\n    directionalLightPosition: { label: \"Position XZ\", value: { x: 4, z: 1 } },\r\n  });\r\n  const { pointLightColor, pointLightIntensity, pointLightPosition } =\r\n    useControls(\"Lighting - Point Light\", {\r\n      pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n      pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n      pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    });\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPenumbra,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spotlight\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n    spotLightPenumbra: { label: \"Penumbra\", value: 0.5 },\r\n    spotLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor,\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightTarget.x);\r\n    target.translateZ(spotLightTarget.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[directionalLightPosition.x, 4, directionalLightPosition.z]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={spotLightPenumbra}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 100%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nconst LightingStudioGui = () => {\r\n  const { ambientLightIntensity } = useControls(\"Lighting - Ambient Light\", {\r\n    ambientLightIntensity: { label: \"Intensity\", max: 5, min: 0, value: 0.1 },\r\n  });\r\n  const { frontLightColor, frontLightIntensity } = useControls(\r\n    \"Lighting - Front Light\",\r\n    {\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      frontLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 0.4,\r\n      },\r\n    },\r\n  );\r\n  const { leftLightColor, leftLightIntensity } = useControls(\r\n    \"Lighting - Left Light\",\r\n    {\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n  const { rightLightColor, rightLightIntensity } = useControls(\r\n    \"Lighting - Right Light\",\r\n    {\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={ambientLightIntensity} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudioGui;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingThreePointGui = () => {\r\n  const { backLightColor, backLightIntensity } = useControls(\r\n    \"Lighting - Back Light\",\r\n    {\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { fillLightColor, fillLightIntensity } = useControls(\r\n    \"Lighting - Fill Light\",\r\n    {\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { keyLightColor, keyLightIntensity } = useControls(\r\n    \"Lighting - Key Light\",\r\n    {\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointGui;\r\n","/**\n * Import dependencies\n */\n\nimport { Suspense } from 'react';\nimport { OrbitControls, Stats } from '@react-three/drei';\nimport { useControls } from 'leva';\n\n/**\n * Import local components\n */\nimport House from './components/House';\nimport Cat from './components/House/Cats';\nimport HouseMatcapTexture from './components/House/MatcapTexture';\nimport HousePhysicalMaterial from './components/House/PhysicalMaterial';\n\n// Lighting\nimport Lighting from './components/Lighting';\nimport LightingGui from './components/Lighting/indexGui';\nimport LightingStudio from './components/Lighting/Studio';\nimport LightingStudioGui from './components/Lighting/StudioGui';\nimport LightingThreePoint from './components/Lighting/ThreePoint';\nimport LightingThreePointGui from './components/Lighting/ThreePointGui';\n\nconst components = [\n    'House',\n    'HouseMatcapTexture',\n    'HousePhysicalMaterial',\n    'Cat'\n];\n\nconst lightings = ['None', 'Default', 'Studio', 'ThreePoint'];\n\nconst Content = () => {\n    const { showStats } = useControls('General', {\n        showStats: {\n            label: 'Stats',\n            value: false,\n        },\n    });\n\n    const {\n        showAxesHelper,\n        showGridHelper,\n        useComponent,\n        useLighting,\n        useLightingGui,\n    } = useControls('Helpers', {\n        showAxesHelper: {\n            label: 'Axes Helper',\n            value: false,\n        },\n        showGridHelper: {\n            label: 'Grid Helper',\n            value: false,\n        },\n        useComponent: {\n            label: 'Component',\n            options: components,\n            value: 'HouseMatcapTexture',\n        },\n        useLighting: {\n            label: 'Lighting',\n            options: lightings,\n            value: 'Studio',\n        },\n        useLightingGui: {\n            label: 'Lighting GUI',\n            value: false,\n        },\n    });\n\n    function showComponent(name) {\n        return useComponent === name;\n    };\n\n    function showLighting(name) {\n        return useLighting === name;\n    };\n\n    return (\n        <>\n            <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\n            {showAxesHelper && <axesHelper />}\n            {showGridHelper && <gridHelper />}\n            {showStats && <Stats />}\n\n            {showLighting('Default') && !useLightingGui && <Lighting/>}\n            {showLighting('Default') && useLightingGui && <LightingGui />}\n            {showLighting(\"Studio\") && !useLightingGui && <LightingStudio />}\n            {showLighting(\"Studio\") && useLightingGui && <LightingStudioGui />}\n            {showLighting(\"ThreePoint\") && !useLightingGui && <LightingThreePoint />}\n            {showLighting(\"ThreePoint\") && useLightingGui && (\n                <LightingThreePointGui />\n            )}\n\n            <Suspense fallback={null}>\n                {showComponent('House') && <House><Cat/></House>}\n                {showComponent('HouseMatcapTexture') && <HouseMatcapTexture><Cat /></HouseMatcapTexture>}\n                {showComponent('HousePhysicalMaterial') && <HousePhysicalMaterial> <Cat/></HousePhysicalMaterial>}\n                {showComponent('Cat') && <Cat/>}\n            </Suspense>\n        </>\n    )\n}\n\nexport default Content\n","import { Canvas } from '@react-three/fiber';\nimport Content from './Content';\nconst App = () => {\n    return (\n        <Canvas>\n            <Content linear={false} shadows={true} />\n        </Canvas>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}